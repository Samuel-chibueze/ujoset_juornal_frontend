// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite" // change to "postgresql" or "mysql" as needed
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String
  role          String    @default("PUBLISHER")

  accounts Account[]
  sessions Session[]
  journals Journal[] @relation("PublisherJournals")
  payments Payment[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum JournalStatus {
  PENDING
  APPROVED
  REJECTED
}

model Journal {
  id          String        @id @default(uuid())
  title       String
  description String?
  imageUrl    String
  pdfUrl      String
  abstract    String
  status      JournalStatus @default(PENDING)
  publishedAt DateTime?
  createdAt   DateTime      @default(now())
  publisherId String
  publisher   User          @relation("PublisherJournals", fields: [publisherId], references: [name])
  payments    Payment[]
}

model Payment {
  id        String   @id @default(uuid())
  amount    Float
  currency  String   @default("USD")
  status    String   @default("pending")
  createdAt DateTime @default(now())
  userId    String
  journalId String
  user      User     @relation(fields: [userId], references: [id])
  journal   Journal  @relation(fields: [journalId], references: [id])
}
